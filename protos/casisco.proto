syntax = "proto3";

package casisco;

service Casisco
{
	rpc registerUser(UserRegisterInfo) returns (UserRegisterStatus) {}
	rpc loginUser(UserLoginInfo) 	   returns (UserLoginStatus) {}
	
	rpc createProject(ProjectInfo) 		 returns (ReplyStatus) {}
	rpc getAlgorithmFile(ProjectInfo)    returns (AlgorithmFileReply) {}
	rpc getPartData(ProjectInfo) 		 returns (PartDataReply) {}
	rpc sendPartialResult(PartialResult) returns (ReplyStatus) {}
};


message UserRegisterInfo
{
	string name = 1;
	string password = 2;
	string email = 3;
};

message UserRegisterStatus
{
	enum Status
	{
		ok = 0;
		nameTaken = 1;
		emailTaken = 2;
		error = 3;
	};

	Status status = 1;
};

message UserLoginInfo
{
	string name = 1;
	string password = 2;
};

message UserLoginStatus
{
	enum Status
	{
		ok = 0;
		invalidPassword = 1;
		noSuchUser = 2;
		error = 3;
	};

	Status status = 1;
};

message ProjectInfo
{
	string name   = 1;
	string author = 2;
	bytes  data   = 3;
	bytes  binaryFile = 4;
};

message AlgorithmFileReply
{
	string name = 1;
	bytes  binaryFile = 2;
	enum Status
	{
		ok 	  = 0;
		error = 1;
	}
	Status status = 3;
}

message PartDataReply
{
	string name  = 1;
	int64 partId = 2;
	bytes data   = 3;
	enum Status
	{
		ok 	  = 0;
		error = 1;
	}
	Status status = 4;
}

message PartialResult
{
	string name  = 1;
	int64 partId = 2;
	bytes data   = 3;
}

message ReplyStatus
{
	enum Status
	{
		ok 	  = 0;
		error = 1;
	}
	Status status = 1;
};